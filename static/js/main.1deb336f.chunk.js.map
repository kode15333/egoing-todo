{"version":3,"sources":["components/TOC.js","components/ReadContent.js","components/CreateContent.js","components/UpdateContent.js","components/Subject.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["TOC","console","log","lists","data","this","props","i","length","push","key","id","href","data-id","onClick","e","preventDefault","onChangePage","target","dataset","bind","title","Component","ReadContent","desc","CreateContent","action","method","onSubmit","value","type","name","placeholder","UpdateContent","state","inputFormHandler","setState","onChange","Subject","sub","Control","onChangeMode","App","max_content_id","mode","selected_content_id","subject","welcome","contents","_title","_desc","_article","_content","getReadContent","_contents","Array","from","_id","className","Number","_mode","window","confirm","splice","alert","getContent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1deb336f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TOC extends Component{\n    render(){\n      console.log('TOC render');\n      var lists = [];\n      var data = this.props.data;\n      var i = 0;\n      while(i < data.length){\n        lists.push(\n          <li key={data[i].id}>\n            <a \n              href={\"/content/\"+data[i].id}\n              data-id={data[i].id}\n              onClick={function(e){\n                e.preventDefault();\n                this.props.onChangePage(e.target.dataset.id);\n              }.bind(this)}\n            >{data[i].title}</a>\n          </li>);\n        i = i + 1;\n      }\n      return (\n        <nav>\n            <ul>\n                {lists}\n            </ul>\n        </nav>\n      );\n    }\n  }\n\nexport default TOC;","import React, { Component } from 'react';\n\nclass ReadContent extends Component{\n    render(){\n      console.log('Content render');\n      return (\n        <article>\n            <h2>{this.props.title}</h2>\n            {this.props.desc}\n        </article>\n      );\n    }\n  }\n\nexport default ReadContent;","import React, { Component } from 'react';\n\nclass CreateContent extends Component{\n    render(){\n      console.log('Content render');\n      return (\n        <article>\n            <h2>Create</h2>\n            <form action=\"/create_process\" method=\"post\"\n              onSubmit={function(e){\n                e.preventDefault();\n                this.props.onSubmit(\n                  e.target.title.value,\n                  e.target.desc.value\n                );\n              }.bind(this)}\n            >\n              <p><input type=\"text\" name=\"title\" placeholder=\"title\"></input></p>\n              <p>\n                <textarea name=\"desc\" placeholder=\"description\"></textarea>\n              </p>\n              <p>\n                <input type=\"submit\"></input>\n              </p>\n            </form>\n        </article>\n      );\n    }\n  }\n\nexport default CreateContent;","import React, { Component } from 'react';\n\nclass UpdateContent extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        id:this.props.data.id,\n        title:this.props.data.title,\n        desc:this.props.data.desc\n      }\n      this.inputFormHandler = this.inputFormHandler.bind(this);\n    }\n    inputFormHandler(e){\n      this.setState({[e.target.name]:e.target.value});\n    }\n    render(){\n      console.log(this.props.data);\n      console.log('UpdateContent render');\n      return (\n        <article>\n            <h2>Update</h2>\n            <form action=\"/create_process\" method=\"post\"\n              onSubmit={function(e){\n                e.preventDefault();\n                this.props.onSubmit(\n                  this.state.id,\n                  this.state.title,\n                  this.state.desc\n                );\n              }.bind(this)}\n            >\n              <input type=\"hidden\" name=\"id\" value={this.state.id}></input>\n              <p>\n                <input \n                  type=\"text\" \n                  name=\"title\" \n                  placeholder=\"title\"\n                  value={this.state.title}\n                  onChange={this.inputFormHandler}\n                ></input>\n                </p>\n              <p>\n                <textarea \n                  onChange={this.inputFormHandler} \n                  name=\"desc\" \n                  placeholder=\"description\" \n                  value={this.state.desc}></textarea>\n              </p>\n              <p>\n                <input type=\"submit\"></input>\n              </p>\n            </form>\n        </article>\n      );\n    }\n  }\n\nexport default UpdateContent;","import React, { Component } from 'react';\nclass Subject extends Component {\n    render(){\n      console.log('Subject render');\n      return (\n        <header>\n            <h1><a href=\"/\" onClick={function(e){\n              e.preventDefault();\n              this.props.onChangePage();\n            }.bind(this)}>{this.props.title}</a></h1>\n            {this.props.sub}\n        </header>  \n      );\n    }\n  }\n\nexport default Subject;","import React, { Component } from 'react';\nclass Control extends Component {\n    render(){\n      console.log('Subject render');\n      return (\n        <ul>\n          <li><a href=\"/create\" onClick={function(e){\n            e.preventDefault();\n            this.props.onChangeMode('create');\n          }.bind(this)}>create</a></li>\n          <li><a href=\"/update\" onClick={function(e){\n            e.preventDefault();\n            this.props.onChangeMode('update');\n          }.bind(this)}>update</a></li>\n          <li><input  onClick={function(e){\n            e.preventDefault();\n            this.props.onChangeMode('delete');\n          }.bind(this)} type=\"button\" value=\"delete\"></input></li>\n        </ul>\n      );\n    }\n  }\n\nexport default Control;","import React, { Component } from 'react';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\"\nimport CreateContent from \"./components/CreateContent\"\nimport UpdateContent from \"./components/UpdateContent\"\nimport Subject from \"./components/Subject\"\nimport Control from \"./components/Control\"\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode:'welcome',\n      selected_content_id:2,\n      subject:{title:'WEB', sub:'World Wide Web!'},\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is for information'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n  getReadContent(){\n    var i = 0;\n      while(i < this.state.contents.length){\n        var data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id) {\n          return data;\n          break;\n        }\n        i = i + 1;\n      }\n  }\n  getContent(){\n    var _title, _desc, _article = null;\n    if(this.state.mode ===  'welcome'){\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if(this.state.mode === 'read'){\n      var _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n    } else  if(this.state.mode === 'create'){\n      _article = <CreateContent onSubmit={function(_title, _desc){\n        this.max_content_id = this.max_content_id+1;\n        var _contents = Array.from(this.state.contents);\n        _contents.push({id:this.max_content_id, title:_title, desc:_desc});\n        this.setState({\n          contents:_contents,\n          mode:'read',\n          selected_content_id:this.max_content_id\n        });\n      }.bind(this)}></CreateContent>\n    } else  if(this.state.mode === 'update'){\n      _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={\n        function(_id, _title, _desc){\n          var _contents = Array.from(this.state.contents);\n          var i = 0;\n          while(i < _contents.length){\n            if(_contents[i].id === _id) {\n              _contents[i] = {id:_id, title:_title, desc:_desc};\n              break;\n            }\n            i = i + 1;\n          }\n          this.setState({\n            contents:_contents,\n            mode:'read'\n          });\n        }.bind(this)}></UpdateContent>\n    }\n    return _article;\n  }\n  render() {\n    console.log('App render');\n    return (\n      <div className=\"App\">\n        <Subject \n          title={this.state.subject.title} \n          sub={this.state.subject.sub}\n          onChangePage={function(){\n            this.setState({mode:'welcome'});\n          }.bind(this)}\n        >\n        </Subject>\n        <TOC \n          onChangePage={function(id){\n            this.setState({\n              mode:'read',\n              selected_content_id:Number(id)\n            });\n          }.bind(this)} \n          data={this.state.contents}\n        ></TOC>\n        <Control onChangeMode={function(_mode){\n          if(_mode === 'delete'){\n            if(window.confirm('really?')){\n              var _contents = Array.from(this.state.contents);\n              var i = 0;\n              while(i < _contents.length){\n                if(_contents[i].id === this.state.selected_content_id){\n                  _contents.splice(i,1);\n                  break;\n                }\n                i = i + 1;\n              }\n              this.setState({\n                mode:'welcome',\n                contents:_contents\n              });\n              alert('deleted!');\n            }\n          } else {\n            this.setState({\n              mode:_mode\n            });\n          }\n          \n        }.bind(this)}></Control>\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}